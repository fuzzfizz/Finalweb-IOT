generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ATH034 {
  id           Int       @id @default(autoincrement())
  time         DateTime? @default(now()) @db.Time(6)
  date         DateTime? @default(now()) @db.Timestamp(6)
  mq2_value    Decimal?  @db.Decimal(10, 0)
  rgb_status   String?   @db.VarChar(10)
  buzzer_value Decimal?  @db.Decimal(10, 0)
  flame_status Decimal?  @db.Decimal(10, 0)
}

model location {
  location_id        Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  latitude           Decimal?             @db.Decimal(10, 7)
  longitude          Decimal?             @db.Decimal(10, 7)
  altitude           Decimal?             @db.Decimal(7, 2)
  weatherforecast    weatherforecast[]
  weathermeasurement weathermeasurement[]
}

model weatherforecast {
  forecast_id     Int       @id @default(autoincrement())
  location_id     Int
  tempmax         Decimal   @db.Decimal(5, 2)
  rainfall_amount Decimal   @db.Decimal(5, 2)
  tempmin         Decimal   @db.Decimal(5, 2)
  timestamp       DateTime? @default(now()) @db.Timestamp(6)
  location        location  @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction)
}

model weathermeasurement {
  measurement_id  Int       @id @default(autoincrement())
  location_id     Int
  wind_speed      Decimal?  @db.Decimal(10, 2)
  temperature     Decimal?  @db.Decimal(10, 2)
  humidity        Decimal?  @db.Decimal(10, 2)
  uv_index        Decimal?  @db.Decimal(10, 2)
  rainfall_amount Decimal?  @db.Decimal(10, 2)
  pm25_value      Decimal?  @db.Decimal(10, 2)
  pm10_value      Decimal?  @db.Decimal(10, 2)
  pm1_value       Decimal?  @db.Decimal(10, 2)
  pressure        Decimal?  @db.Decimal(10, 2)
  altitude        Decimal?  @db.Decimal(10, 2)
  timestamp       DateTime? @default(now()) @db.Timestamp(6)
  location        location  @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction)
}
